// <auto-generated />
using System;
using HotelAdmin.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HotelAdmin.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HotelAdmin.Models.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<int>("PersonsCount")
                        .HasColumnType("integer")
                        .HasColumnName("Persons_count");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Square")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Стандарт",
                            Path = "Standard",
                            PersonsCount = 2,
                            Photo = "img/room/room-s.jpeg",
                            Square = "20 кв.м"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Стандарт \"queen-size\"",
                            Path = "StandardBig",
                            PersonsCount = 2,
                            Photo = "img/room/room-sb.jpg",
                            Square = "20 кв.м"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Комфорт",
                            Path = "StandardGood",
                            PersonsCount = 2,
                            Photo = "img/room/room-si.jpeg",
                            Square = "25 кв.м"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Комфорт \"queen-size\"",
                            Path = "StandardGoodBig",
                            PersonsCount = 2,
                            Photo = "img/room/room-sbi.jpeg",
                            Square = "25 кв.м"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Полулюкс",
                            Path = "SemiLuxury",
                            PersonsCount = 4,
                            Photo = "img/room/room-pl.jpg",
                            Square = "32 кв.м"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Люкс",
                            Path = "Luxury",
                            PersonsCount = 4,
                            Photo = "img/room/room-l.jpg",
                            Square = "46 кв.м"
                        });
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.CategoryTariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("TariffPlanId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TariffPlanId");

                    b.ToTable("TariffAdmins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Price = 3000,
                            TariffPlanId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Price = 3800,
                            TariffPlanId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Price = 4600,
                            TariffPlanId = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Price = 5400,
                            TariffPlanId = 4
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Price = 3400,
                            TariffPlanId = 1
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Price = 4300,
                            TariffPlanId = 2
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Price = 5200,
                            TariffPlanId = 3
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Price = 6200,
                            TariffPlanId = 4
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Price = 4100,
                            TariffPlanId = 1
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Price = 5300,
                            TariffPlanId = 2
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            Price = 6300,
                            TariffPlanId = 3
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            Price = 7400,
                            TariffPlanId = 4
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 4,
                            Price = 4500,
                            TariffPlanId = 1
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            Price = 5400,
                            TariffPlanId = 2
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 4,
                            Price = 6200,
                            TariffPlanId = 3
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 4,
                            Price = 7200,
                            TariffPlanId = 4
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 5,
                            Price = 5300,
                            TariffPlanId = 1
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 5,
                            Price = 6400,
                            TariffPlanId = 2
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 5,
                            Price = 7500,
                            TariffPlanId = 3
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 5,
                            Price = 8700,
                            TariffPlanId = 4
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 6,
                            Price = 6300,
                            TariffPlanId = 1
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 6,
                            Price = 7400,
                            TariffPlanId = 2
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 6,
                            Price = 8500,
                            TariffPlanId = 3
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 6,
                            Price = 9800,
                            TariffPlanId = 4
                        });
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TariffId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("TariffId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.LoginModel", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Email");

                    b.ToTable("LoginModels");

                    b.HasData(
                        new
                        {
                            Email = "admin@mail.ru",
                            Password = "$2a$11$iF0y3eNqew/YXRPpPCGE2.sh3jwtWMbcOihfGd8M0/OWvGGKrgKGK",
                            Role = 0
                        },
                        new
                        {
                            Email = "manager@mail.ru",
                            Password = "$2a$11$lT8u7BmSxbPNzH14fER8I.AvOBPsqtOPUdR.xzbO1YdIzIuoxi9bW",
                            Role = 1
                        });
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BookingNumber")
                        .HasColumnType("text");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GuestCount")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.OrderPay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BookingNumber")
                        .HasColumnType("text");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GuestCount")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("OrderPays");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Number = 204
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Number = 307
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Number = 405
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Number = 412
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Number = 514
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            Number = 618
                        });
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.RoomDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("RoomId");

                    b.ToTable("Dates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            RoomId = 2
                        },
                        new
                        {
                            Id = 3,
                            RoomId = 3
                        },
                        new
                        {
                            Id = 4,
                            RoomId = 4
                        },
                        new
                        {
                            Id = 5,
                            RoomId = 5
                        },
                        new
                        {
                            Id = 6,
                            RoomId = 6
                        });
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Subscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.TariffPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TariffPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Без питания"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Завтрак включён"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Полупансион"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Полный пансион"
                        });
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.CategoryTariff", b =>
                {
                    b.HasOne("HotelAdmin.Models.Entity.Category", "Category")
                        .WithMany("TariffAdmins")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelAdmin.Models.Entity.TariffPlan", "TariffPlan")
                        .WithMany("TariffAdmins")
                        .HasForeignKey("TariffPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("TariffPlan");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Client", b =>
                {
                    b.HasOne("HotelAdmin.Models.Entity.Room", "Room")
                        .WithMany("Clients")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelAdmin.Models.Entity.CategoryTariff", "Tariff")
                        .WithMany("Clients")
                        .HasForeignKey("TariffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Tariff");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Order", b =>
                {
                    b.HasOne("HotelAdmin.Models.Entity.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.OrderPay", b =>
                {
                    b.HasOne("HotelAdmin.Models.Entity.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Room", b =>
                {
                    b.HasOne("HotelAdmin.Models.Entity.Category", "Category")
                        .WithMany("Rooms")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.RoomDate", b =>
                {
                    b.HasOne("HotelAdmin.Models.Entity.Client", "Client")
                        .WithMany("RoomDates")
                        .HasForeignKey("ClientId");

                    b.HasOne("HotelAdmin.Models.Entity.Room", "Room")
                        .WithMany("RoomDates")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Category", b =>
                {
                    b.Navigation("Rooms");

                    b.Navigation("TariffAdmins");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.CategoryTariff", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Client", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("RoomDates");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.Room", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("RoomDates");
                });

            modelBuilder.Entity("HotelAdmin.Models.Entity.TariffPlan", b =>
                {
                    b.Navigation("TariffAdmins");
                });
#pragma warning restore 612, 618
        }
    }
}
